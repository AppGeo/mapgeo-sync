<Modal @isOpen={{@isOpen}} @onClose={{@onClose}} as |m|>
  <m.Header>
    Edit Sync Rule {{@rule.name}}
  </m.Header>

  <ChangesetForm
    @changeset={{this.changeset}}
    @onSubmit={{perform this.updateRule}} as |Form changeset|
  >
    <m.Body>
      <p class='text-gray-500'>
        Rule ID: {{@rule.id}}
      </p>

      <FormSelect
        @label='Source'
        @options={{@sources}}
        @selected={{this.source}}
        @containerClass='mt-4'
        @placeholder='Select Local Source'
        @onChange={{fn this.changeSource changeset}} as |source|
      >
        <Source::Card class='p-2' @source={{source}} />
      </FormSelect>

      <div class='mt-4'>
        {{#if (eq this.source.sourceType 'database')}}
          <Form.Textarea
            @label='Select Statement'
            @hint='Select should return a the_geom column in the GeoJSON format'
            @fieldName='sourceConfig.selectStatement'
            placeholder='select *, ST_AsGeoJSON(geom) as the_geom from "properties"'
            rows='5'
          />
        {{else if (eq this.source.sourceType 'file')}}
          <Rule::FileSelect
            @Form={{Form}}
            @changeset={{changeset}}
            @source={{this.source}}
          />
        {{/if}}
      </div>

      <div class='flex space-x-2 mt-4'>
        {{#if @rule.schedule}}
          <Button
            @intent='success'
            class='flex space-x-1'
            disabled={{this.startSchedule.isRunning}}
            {{on 'click' (perform this.startSchedule)}}
          >
            <FaIcon @icon='play' />
            <span>
              Start Schedule
            </span>
          </Button>
        {{/if}}

        <Button
          @intent='warning'
          class='flex space-x-1'
          disabled={{this.deleteRule.isRunning}}
          {{on 'click' (perform this.deleteRule)}}
        >
          <FaIcon @icon='trash' />
          <span>
            Delete
          </span>
        </Button>
      </div>

      <div class='mt-4'>
        {{#if this.startSchedule.isRunning}}
          Starting..
        {{else if this.startSchedule.last.value}}
          Will run at {{this.startSchedule.last.value.nextRunDate}}
        {{/if}}
      </div>
    </m.Body>

    <m.Footer class='flex justify-between'>
      <Button @appearance='minimal' class='mr-4' {{on 'click' @onClose}}>
        Cancel
      </Button>
      <Button @type='submit' @intent='primary'>
        Update Rule
      </Button>
    </m.Footer>
  </ChangesetForm>
</Modal>