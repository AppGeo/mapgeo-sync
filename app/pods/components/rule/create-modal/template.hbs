<Modal @isOpen={{@isOpen}} @onClose={{@onClose}} as |m|>
  <m.Header>
    New Sync Rule
  </m.Header>

  <ChangesetForm
    @changeset={{changeset this.ruleInput}}
    @onSubmit={{this.createRule}} as |Form changeset|
  >
    <m.Body>
      <Form.Input @label='Name' @fieldName='name' @containerClass='mt-4' />

      <Form.Select
        @label='Dataset'
        @fieldName='dataset'
        @options={{@datasets}}
        @containerClass='mt-4' as |dataset|
      >
        {{dataset.name}}
      </Form.Select>

      {{#if changeset.dataset}}
        {{did-insert (perform this.findDataset changeset.dataset.id)}}

        {{#if this.findDataset.isRunning}}
          Loading dataset config..
        {{else if this.dataset}}
          <Form.Select
            @label='Mapping'
            @fieldName='mapping'
            @options={{this.mappings}}
            @containerClass='mt-4' as |mapping|
          >
            {{mapping.name}}
          </Form.Select>
        {{/if}}
      {{/if}}

      {{#if changeset.mapping}}
        <Form.Select
          @label='Source'
          @fieldName='source'
          @options={{@sources}}
          @containerClass='mt-4' as |source|
        >
          <Source::Card class='p-2' @source={{source}} />
        </Form.Select>
      {{/if}}

      {{#if changeset.source}}
        {{#if (eq changeset.source.sourceType 'database')}}
          <Form.Textarea
            @label='Select Statement'
            @hint='Select should return a the_geom column in the GeoJSON format'
            @fieldName='selectStatement'
            @containerClass='mt-4'
            placeholder='select *, ST_AsGeoJSON(geom) as the_geom from "sync-test"'
            rows='5'
          />
        {{else if (eq changeset.source.sourceType 'file')}}
          <Form.Input
            @label='File'
            @fieldName='file'
            @containerClass='mt-4'
            type='file'
          />
        {{/if}}

        {{#unless this.isAddScheduleVisible}}
          <Button
            @intent='primary'
            @appearance='outlined'
            class='mt-4'
            {{on 'click' (set this.isAddScheduleVisible true)}}
          >
            Add Schedule
          </Button>
        {{/unless}}

        {{#if this.isAddScheduleVisible}}
          <Form.Select
            @label='Schedule Frequency'
            @fieldName='schedule.frequency'
            @options={{this.frequencies}}
            @containerClass='mt-4' as |frequency|
          >
            {{frequency}}
          </Form.Select>

          <Form.Select
            @label='Schedule Hour'
            @fieldName='schedule.hour'
            @hint='The job will run at a random point within the selected hour'
            @options={{this.hours}}
            @containerClass='mt-4' as |hour|
          >
            {{hour}}
          </Form.Select>
        {{/if}}
      {{/if}}
    </m.Body>

    <m.Footer class='flex justify-between'>
      <Button @appearance='minimal' class='mr-4' {{on 'click' @onClose}}>
        Cancel
      </Button>
      <Button @type='submit' @intent='primary'>
        Create Rule
      </Button>
    </m.Footer>
  </ChangesetForm>
</Modal>